version: 2
jobs:
  build:
    working_directory: ~/winsleague/winsleague
    parallelism: 3
    # CircleCI 2.0 does not support environment variables that refer to each other the same way as 1.0 did.
    # If any of these refer to each other, rewrite them so that they don't or see https://circleci.com/docs/2.0/env-vars/#interpolating-environment-variables-to-set-other-environment-variables .
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      METEOR_ALLOW_SUPERUSER: 1
    #  PATH: ${PATH}:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin
    
    docker:
      - image: abernix/meteord:node-8-base
    steps:
      - restore_cache:
          name: Restore repo cache
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - checkout
      - save_cache:
          name: Save repo cache
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS

      - run: 
          name: Install Yarn
          command: curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.3.2
      - run:
          name: Update PATH for Yarn
          command: |
            echo 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV

      - run: yarn global add https://github.com/jasonLaster/greenkeeper-lockfile.git

      - restore_cache:
          name: Restore Meteor runtime cache
          key: meteor-v1-{{ checksum ".meteor/release" }}
      - run: ./.testing/cache_meteor.sh
      - save_cache:
          name: Save Meteor runtime cache
          key: meteor-v1-{{ checksum ".meteor/release" }}
          paths:
            - ~/.meteor

      - run: ./.testing/print_environment.sh

      - run: greenkeeper-lockfile-update

      - restore_cache:
          name: Restore Yarn package cache
          key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run: ./.testing/cache_npm_dependencies.sh
      - save_cache:
          name: Save Yarn package cache
          key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ~/node_modules
            - /opt/circleci/nodejs/v8.9.3/lib/node_modules

      - run:
          command: ./.testing/cache_build_and_dependencies.sh
          no_output_timeout: 1200s

      - persist_to_workspace:
          root: ~/.meteor/local
          paths:
            - build
            - bundler-cache
            - isopacks
            - plugin-cache


  acceptance_test_1:
    docker:
      - image: abernix/meteord:node-8-base
    steps:
      - restore_cache:
          key: meteor-v1-{{ checksum ".meteor/release" }}
      - attach_workspace:
          at: ~/.meteor/local
      - run: meteor npm run test
      - run:
          name: greenkeeper-lockfile-upload
          command: greenkeeper-lockfile-upload

  acceptance_test_2:
    docker:
      - image: abernix/meteord:node-8-base
    steps:
      - restore_cache:
          key: meteor-v1-{{ checksum ".meteor/release" }}
      - attach_workspace:
          at: ~/.meteor/local
      - run: meteor npm run test-app

  acceptance_test_3:
    machine: # we need sudo access to upgrade chrome
      image: circleci/classic:201711-01
    steps:
      - run: /opt/google/chrome/google-chrome --version
      - run: ./.testing/upgrade_chrome_version.sh
      - restore_cache:
          key: meteor-v1-{{ checksum ".meteor/release" }}
      - attach_workspace:
          at: ~/.meteor/local
      - run: ./tests/acceptance_run

  deploy:
    docker:
      - image: abernix/meteord:node-8-base
    steps:
      - run: (cd .deploy/production; gpg --no-use-agent --quiet --passphrase $MUP_PASSPHRASE -o mup.js -d mup.js.gpg)
      - run: yarn global add ssh2@0.4.15 # needed for meteor-up
      - run: yarn global add mup@1.0.1 # install meteor-up for deployment
      - run: (cd .deploy/production; mup deploy)
      - run: curl https://api.rollbar.com/api/1/deploy/ -F access_token=$ROLLBAR_SERVER_ACCESS_TOKEN -F environment=production -F revision=$CIRCLE_SHA1 -F local_username=$CIRCLE_USERNAME
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: .meteor/local/log
      - store_artifacts:
          path: log
      - store_artifacts:
          path: node_cache/_logs
      - store_artifacts:
          path: ~/.config/yarn/global/yarn-error.log

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build
      - acceptance_test_1:
          requires:
            - build
      - acceptance_test_2:
          requires:
            - build
      - acceptance_test_3:
          requires:
            - build
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - acceptance_test_1
            - acceptance_test_2
            - acceptance_test_3