machine:
  node:
    version: 4.8.1
  environment: # https://circleci.com/docs/install-and-use-yarn/
    PATH: "${PATH}:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin"

general:
  artifacts:
    - "app/.meteor/local/log"
    - "log"
    - "app/report.json" # from meteor_coverage's out_coverage
    - "app/lcov.info"

dependencies:
  cache_directories:
    - "~/.npm"
    - "~/.meteor"
    - "~/.cache/yarn"
    - "app/node_modules"
    - "app/.meteor/local/build"
    - "app/.meteor/local/bundler-cache"
    - "app/.meteor/local/isopacks"
    - "app/.meteor/local/plugin-cache"
    - "/opt/circleci/nodejs/v4.8.1/bin"
    - "/opt/circleci/nodejs/v4.8.1/lib/node_modules"

  pre:
    # upgrade Chrome. https://gist.github.com/Arjeno/8564d9643f16d072a85b9c9b5a9f7de0
    - curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - sudo dpkg -i google-chrome.deb
    - sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox|g' /opt/google/chrome/google-chrome
    - rm google-chrome.deb

  override:
    - (cd app; ./.testing/cache_meteor.sh)
    - (cd app; ./.testing/cache_npm_dependencies.sh)
    - (cd app; ./.testing/cache_build_and_dependencies.sh):
        timeout: 1200

checkout:
  post:
    - git submodule update --init

test:
  override:
    - case $CIRCLE_NODE_INDEX in 0) (cd app; meteor npm run test) ;; 1) (cd app; meteor npm run test-app) ;; 2) (cd app; ./.testing/install_chimp.sh; ./tests/acceptance_run) ;; esac:
        parallel: true

deployment:
  production:
    branch: master
    commands:
      # Publish code coverage data to CodeClimate (only works on master branch).
      # $CODECLIMATE_REPO_TOKEN is an environment variable setup in CircleCI.
      # - yarn global add codeclimate-test-reporter@0.3.3
      # - (cd app; CODECLIMATE_REPO_TOKEN=$CODECLIMATE_REPO_TOKEN codeclimate-test-reporter < lcov.info)

      # Decrypt Meteor Up config
      - (cd .deploy/production; gpg --no-use-agent --quiet --passphrase $MUP_PASSPHRASE -o mup.js -d mup.js.gpg)

      # Deploy
      - yarn global add ssh2@0.4.15 # needed for meteor-up
      - yarn global add mup@1.0.1 # install meteor-up for deployment
      - (cd .deploy/production; mup deploy)

      # Notify Rollbar about deploy
      - curl https://api.rollbar.com/api/1/deploy/ -F access_token=$ROLLBAR_SERVER_ACCESS_TOKEN -F environment=production -F revision=$CIRCLE_SHA1 -F local_username=$CIRCLE_USERNAME
